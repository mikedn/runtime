// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

#ifndef SIMD_AS_HWINTRINSIC
#error Define SIMD_AS_HWINTRINSIC before including this file
#endif

#pragma push_macro("ID")
#pragma push_macro("NM")

#ifdef FEATURE_HW_INTRINSICS

// Defines a SimdAsHWIntrinsic where the name is implicitly taken from the id
#define ID(classId, id, numarg, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, flag)                                         \
    SIMD_AS_HWINTRINSIC(classId, id, #id, numarg, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, flag)

// Defines a SimdAsHWIntrinsic where the name is explicit
#define NM(classId, id, name, numarg, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, flag)                                   \
    SIMD_AS_HWINTRINSIC(classId, id, name, numarg, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, flag)

// NI_Illegal is used to represent an unsupported vector element type
// Using the same intrinsic as the represented entry is used to indicate special handling is required

// clang-format off

// ISA      ID               Name      NumArg TYP_BYTE TYP_UBYTE   TYP_SHORT   TYP_USHORT  TYP_INT     TYP_UINT    TYP_LONG    TYP_ULONG   TYP_FLOAT                   TYP_DOUBLE   Flags
// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ID(Vector2, Abs,                       1, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Abs,             NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector2, CopyTo,                    2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector2_CopyTo,          NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
NM(Vector2, CopyToAt,        "CopyTo", 3, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector2_CopyToAt,        NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
NM(Vector2, CreateBroadcast, ".ctor",  2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector2_CreateBroadcast, NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
NM(Vector2, Create,          ".ctor",  3, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector2_Create,          NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
ID(Vector2, Dot,                       2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector64_Dot,            NI_Illegal}, SimdAsHWIntrinsicFlag::None)
NM(Vector2, EqualsInstance,  "Equals", 2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector64_op_Equality,    NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
ID(Vector2, get_One,                   0, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector2_get_One,         NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector2, get_Zero,                  0, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector64_get_Zero,       NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector2, Max,                       2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Max,             NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector2, Min,                       2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Min,             NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector2, op_Addition,               2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Add,             NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector2, op_Division,               2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Arm64_Divide,    NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector2, op_Equality,               2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector64_op_Equality,    NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector2, op_Inequality,             2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector64_op_Inequality,  NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector2, op_Multiply,               2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Multiply,        NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector2, op_Subtraction,            2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Subtract,        NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector2, SquareRoot,                1, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Arm64_Sqrt,      NI_Illegal}, SimdAsHWIntrinsicFlag::None)

// ISA      ID               Name      NumArg TYP_BYTE TYP_UBYTE   TYP_SHORT   TYP_USHORT  TYP_INT     TYP_UINT    TYP_LONG    TYP_ULONG   TYP_FLOAT                   TYP_DOUBLE   Flags
// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ID(Vector3, Abs,                       1, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Abs,             NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector3, CopyTo,                    2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector3_CopyTo,          NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
NM(Vector3, CopyToAt,        "CopyTo", 3, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector3_CopyToAt,        NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
NM(Vector3, CreateBroadcast, ".ctor",  2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector3_CreateBroadcast, NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
NM(Vector3, CreateExtend1,   ".ctor",  3, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector3_CreateExtend1,   NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
NM(Vector3, Create,          ".ctor",  4, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector3_Create,          NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
ID(Vector3, Dot,                       2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector128_Dot,           NI_Illegal}, SimdAsHWIntrinsicFlag::None)
NM(Vector3, EqualsInstance,  "Equals", 2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector128_op_Equality,   NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
ID(Vector3, get_One,                   0, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector3_get_One,         NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector3, get_Zero,                  0, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector128_get_Zero,      NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector3, Max,                       2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Max,             NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector3, Min,                       2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Min,             NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector3, op_Addition,               2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Add,             NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector3, op_Division,               2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Arm64_Divide,    NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector3, op_Equality,               2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector128_op_Equality,   NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector3, op_Inequality,             2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector128_op_Inequality, NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector3, op_Multiply,               2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Multiply,        NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector3, op_Subtraction,            2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Subtract,        NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector3, SquareRoot,                1, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Arm64_Sqrt,      NI_Illegal}, SimdAsHWIntrinsicFlag::None)

// ISA      ID               Name      NumArg TYP_BYTE TYP_UBYTE   TYP_SHORT   TYP_USHORT  TYP_INT     TYP_UINT    TYP_LONG    TYP_ULONG   TYP_FLOAT                   TYP_DOUBLE   Flags
// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ID(Vector4, Abs,                       1, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Abs,             NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector4, CopyTo,                    2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector4_CopyTo,          NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
NM(Vector4, CopyToAt,        "CopyTo", 3, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector4_CopyToAt,        NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
NM(Vector4, CreateBroadcast, ".ctor",  2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector4_CreateBroadcast, NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
NM(Vector4, CreateExtend1,   ".ctor",  3, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector4_CreateExtend1,   NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
NM(Vector4, CreateExtend2,   ".ctor",  4, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector4_CreateExtend2,   NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
NM(Vector4, Create,          ".ctor",  5, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector4_Create,          NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
ID(Vector4, Dot,                       2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector128_Dot,           NI_Illegal}, SimdAsHWIntrinsicFlag::None)
NM(Vector4, EqualsInstance,  "Equals", 2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector128_op_Equality,   NI_Illegal}, SimdAsHWIntrinsicFlag::InstanceMethod)
ID(Vector4, get_One,                   0, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector4_get_One,         NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector4, get_Zero,                  0, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector128_get_Zero,      NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector4, Max,                       2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Max,             NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector4, Min,                       2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Min,             NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector4, op_Addition,               2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Add,             NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector4, op_Division,               2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Arm64_Divide,    NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector4, op_Equality,               2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector128_op_Equality,   NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector4, op_Inequality,             2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Vector128_op_Inequality, NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector4, op_Multiply,               2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Multiply,        NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector4, op_Subtraction,            2, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Subtract,        NI_Illegal}, SimdAsHWIntrinsicFlag::None)
ID(Vector4, SquareRoot,                1, {NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_Illegal, NI_AdvSimd_Arm64_Sqrt,      NI_Illegal}, SimdAsHWIntrinsicFlag::None)

// ISA         ID                  Name      NumArg TYP_BYTE                           TYP_UBYTE                            TYP_SHORT                              TYP_USHORT                            TYP_INT                               TYP_UINT                              TYP_LONG                                    TYP_ULONG                                   TYP_FLOAT                              TYP_DOUBLE                                    Flags

ID(VectorT128, Abs,                          1, {NI_AdvSimd_Abs,                       NI_VectorT128_Abs,                    NI_AdvSimd_Abs,                       NI_VectorT128_Abs,                    NI_AdvSimd_Abs,                       NI_VectorT128_Abs,                    NI_AdvSimd_Arm64_Abs,                       NI_VectorT128_Abs,                          NI_AdvSimd_Abs,                        NI_AdvSimd_Arm64_Abs},                        SimdAsHWIntrinsicFlag::None)
ID(VectorT128, AndNot,                       2, {NI_AdvSimd_BitwiseClear,              NI_AdvSimd_BitwiseClear,              NI_AdvSimd_BitwiseClear,              NI_AdvSimd_BitwiseClear,              NI_AdvSimd_BitwiseClear,              NI_AdvSimd_BitwiseClear,              NI_AdvSimd_BitwiseClear,                    NI_AdvSimd_BitwiseClear,                    NI_AdvSimd_BitwiseClear,               NI_AdvSimd_BitwiseClear},                     SimdAsHWIntrinsicFlag::None)
ID(VectorT128, As,                           1, {NI_VectorT128_As,                     NI_VectorT128_As,                     NI_VectorT128_As,                     NI_VectorT128_As,                     NI_VectorT128_As,                     NI_VectorT128_As,                     NI_VectorT128_As,                           NI_VectorT128_As,                           NI_VectorT128_As,                      NI_VectorT128_As},                            SimdAsHWIntrinsicFlag::None)
ID(VectorT128, Ceiling,                      1, {NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                                 NI_Illegal,                                 NI_AdvSimd_Ceiling,                    NI_AdvSimd_Arm64_Ceiling},                    SimdAsHWIntrinsicFlag::None)
ID(VectorT128, ConditionalSelect,            3, {NI_VectorT128_ConditionalSelect,      NI_VectorT128_ConditionalSelect,      NI_VectorT128_ConditionalSelect,      NI_VectorT128_ConditionalSelect,      NI_VectorT128_ConditionalSelect,      NI_VectorT128_ConditionalSelect,      NI_VectorT128_ConditionalSelect,            NI_VectorT128_ConditionalSelect,            NI_VectorT128_ConditionalSelect,       NI_VectorT128_ConditionalSelect},             SimdAsHWIntrinsicFlag::None)
ID(VectorT128, ConvertToInt32,               1, {NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                                 NI_Illegal,                                 NI_AdvSimd_ConvertToInt32RoundToZero,  NI_Illegal},                                  SimdAsHWIntrinsicFlag::None)
ID(VectorT128, ConvertToUInt32,              1, {NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                                 NI_Illegal,                                 NI_AdvSimd_ConvertToUInt32RoundToZero, NI_Illegal},                                  SimdAsHWIntrinsicFlag::None)
ID(VectorT128, ConvertToInt64,               1, {NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                                 NI_Illegal,                                 NI_Illegal,                            NI_AdvSimd_Arm64_ConvertToInt64RoundToZero},  SimdAsHWIntrinsicFlag::None)
ID(VectorT128, ConvertToUInt64,              1, {NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                                 NI_Illegal,                                 NI_Illegal,                            NI_AdvSimd_Arm64_ConvertToUInt64RoundToZero}, SimdAsHWIntrinsicFlag::None)
ID(VectorT128, ConvertToSingle,              1, {NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_AdvSimd_ConvertToSingle,           NI_AdvSimd_ConvertToSingle,           NI_Illegal,                                 NI_Illegal,                                 NI_Illegal,                            NI_Illegal},                                  SimdAsHWIntrinsicFlag::None)
ID(VectorT128, ConvertToDouble,              1, {NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_AdvSimd_Arm64_ConvertToDouble,           NI_AdvSimd_Arm64_ConvertToDouble,           NI_Illegal,                            NI_Illegal},                                  SimdAsHWIntrinsicFlag::None)
ID(VectorT128, CopyTo,                       2, {NI_VectorT128_CopyTo,                 NI_VectorT128_CopyTo,                 NI_VectorT128_CopyTo,                 NI_VectorT128_CopyTo,                 NI_VectorT128_CopyTo,                 NI_VectorT128_CopyTo,                 NI_VectorT128_CopyTo,                       NI_VectorT128_CopyTo,                       NI_VectorT128_CopyTo,                  NI_VectorT128_CopyTo},                        SimdAsHWIntrinsicFlag::InstanceMethod)
NM(VectorT128, CopyToAt,           "CopyTo", 3, {NI_VectorT128_CopyToAt,               NI_VectorT128_CopyToAt,               NI_VectorT128_CopyToAt,               NI_VectorT128_CopyToAt,               NI_VectorT128_CopyToAt,               NI_VectorT128_CopyToAt,               NI_VectorT128_CopyToAt,                     NI_VectorT128_CopyToAt,                     NI_VectorT128_CopyToAt,                NI_VectorT128_CopyToAt},                      SimdAsHWIntrinsicFlag::InstanceMethod)
NM(VectorT128, CreateBroadcast,    ".ctor",  2, {NI_VectorT128_CreateBroadcast,        NI_VectorT128_CreateBroadcast,        NI_VectorT128_CreateBroadcast,        NI_VectorT128_CreateBroadcast,        NI_VectorT128_CreateBroadcast,        NI_VectorT128_CreateBroadcast,        NI_VectorT128_CreateBroadcast,              NI_VectorT128_CreateBroadcast,              NI_VectorT128_CreateBroadcast,         NI_VectorT128_CreateBroadcast},               SimdAsHWIntrinsicFlag::InstanceMethod)
NM(VectorT128, FromArray,          ".ctor",  3, {NI_VectorT128_FromArray,              NI_VectorT128_FromArray,              NI_VectorT128_FromArray,              NI_VectorT128_FromArray,              NI_VectorT128_FromArray,              NI_VectorT128_FromArray,              NI_VectorT128_FromArray,                    NI_VectorT128_FromArray,                    NI_VectorT128_FromArray,               NI_VectorT128_FromArray},                     SimdAsHWIntrinsicFlag::InstanceMethod)
ID(VectorT128, Dot,                          2, {NI_Vector128_Dot,                     NI_Vector128_Dot,                     NI_Vector128_Dot,                     NI_Vector128_Dot,                     NI_Vector128_Dot,                     NI_Vector128_Dot,                     NI_Illegal,                                 NI_Illegal,                                 NI_Vector128_Dot,                      NI_Vector128_Dot},                            SimdAsHWIntrinsicFlag::None)
ID(VectorT128, Equals,                       2, {NI_AdvSimd_CompareEqual,              NI_AdvSimd_CompareEqual,              NI_AdvSimd_CompareEqual,              NI_AdvSimd_CompareEqual,              NI_AdvSimd_CompareEqual,              NI_AdvSimd_CompareEqual,              NI_AdvSimd_Arm64_CompareEqual,              NI_AdvSimd_Arm64_CompareEqual,              NI_AdvSimd_CompareEqual,               NI_AdvSimd_Arm64_CompareEqual},               SimdAsHWIntrinsicFlag::None)
NM(VectorT128, EqualsInstance,     "Equals", 2, {NI_Vector128_op_Equality,             NI_Vector128_op_Equality,             NI_Vector128_op_Equality,             NI_Vector128_op_Equality,             NI_Vector128_op_Equality,             NI_Vector128_op_Equality,             NI_Vector128_op_Equality,                   NI_Vector128_op_Equality,                   NI_Vector128_op_Equality,              NI_Vector128_op_Equality},                    SimdAsHWIntrinsicFlag::InstanceMethod)
ID(VectorT128, Floor,                        1, {NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                                 NI_Illegal,                                 NI_AdvSimd_Floor,                      NI_AdvSimd_Arm64_Floor},                      SimdAsHWIntrinsicFlag::None)
ID(VectorT128, get_AllBitsSet,               0, {NI_Vector128_get_AllBitsSet,          NI_Vector128_get_AllBitsSet,          NI_Vector128_get_AllBitsSet,          NI_Vector128_get_AllBitsSet,          NI_Vector128_get_AllBitsSet,          NI_Vector128_get_AllBitsSet,          NI_Vector128_get_AllBitsSet,                NI_Vector128_get_AllBitsSet,                NI_Vector128_get_AllBitsSet,           NI_Vector128_get_AllBitsSet},                 SimdAsHWIntrinsicFlag::None)
ID(VectorT128, get_Count,                    0, {NI_VectorT128_get_Count,              NI_VectorT128_get_Count,              NI_VectorT128_get_Count,              NI_VectorT128_get_Count,              NI_VectorT128_get_Count,              NI_VectorT128_get_Count,              NI_VectorT128_get_Count,                    NI_VectorT128_get_Count,                    NI_VectorT128_get_Count,               NI_VectorT128_get_Count},                     SimdAsHWIntrinsicFlag::None)
ID(VectorT128, get_IsHardwareAccelerated,    0, {NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                                 NI_Illegal,                                 NI_Illegal,                            NI_Illegal},                                  SimdAsHWIntrinsicFlag::None)
ID(VectorT128, get_Item,                     2, {NI_VectorT128_get_Item,               NI_VectorT128_get_Item,               NI_VectorT128_get_Item,               NI_VectorT128_get_Item,               NI_VectorT128_get_Item,               NI_VectorT128_get_Item,               NI_VectorT128_get_Item,                     NI_VectorT128_get_Item,                     NI_VectorT128_get_Item,                NI_VectorT128_get_Item},                      SimdAsHWIntrinsicFlag::InstanceMethod)
ID(VectorT128, get_One,                      0, {NI_VectorT128_get_One,                NI_VectorT128_get_One,                NI_VectorT128_get_One,                NI_VectorT128_get_One,                NI_VectorT128_get_One,                NI_VectorT128_get_One,                NI_VectorT128_get_One,                      NI_VectorT128_get_One,                      NI_VectorT128_get_One,                 NI_VectorT128_get_One},                       SimdAsHWIntrinsicFlag::None)
ID(VectorT128, get_Zero,                     0, {NI_Vector128_get_Zero,                NI_Vector128_get_Zero,                NI_Vector128_get_Zero,                NI_Vector128_get_Zero,                NI_Vector128_get_Zero,                NI_Vector128_get_Zero,                NI_Vector128_get_Zero,                      NI_Vector128_get_Zero,                      NI_Vector128_get_Zero,                 NI_Vector128_get_Zero},                       SimdAsHWIntrinsicFlag::None)
ID(VectorT128, GreaterThan,                  2, {NI_AdvSimd_CompareGreaterThan,        NI_AdvSimd_CompareGreaterThan,        NI_AdvSimd_CompareGreaterThan,        NI_AdvSimd_CompareGreaterThan,        NI_AdvSimd_CompareGreaterThan,        NI_AdvSimd_CompareGreaterThan,        NI_AdvSimd_Arm64_CompareGreaterThan,        NI_AdvSimd_Arm64_CompareGreaterThan,        NI_AdvSimd_CompareGreaterThan,         NI_AdvSimd_Arm64_CompareGreaterThan},         SimdAsHWIntrinsicFlag::None)
ID(VectorT128, GreaterThanOrEqual,           2, {NI_AdvSimd_CompareGreaterThanOrEqual, NI_AdvSimd_CompareGreaterThanOrEqual, NI_AdvSimd_CompareGreaterThanOrEqual, NI_AdvSimd_CompareGreaterThanOrEqual, NI_AdvSimd_CompareGreaterThanOrEqual, NI_AdvSimd_CompareGreaterThanOrEqual, NI_AdvSimd_Arm64_CompareGreaterThanOrEqual, NI_AdvSimd_Arm64_CompareGreaterThanOrEqual, NI_AdvSimd_CompareGreaterThanOrEqual,  NI_AdvSimd_Arm64_CompareGreaterThanOrEqual},  SimdAsHWIntrinsicFlag::None)
ID(VectorT128, LessThan,                     2, {NI_AdvSimd_CompareLessThan,           NI_AdvSimd_CompareLessThan,           NI_AdvSimd_CompareLessThan,           NI_AdvSimd_CompareLessThan,           NI_AdvSimd_CompareLessThan,           NI_AdvSimd_CompareLessThan,           NI_AdvSimd_Arm64_CompareLessThan,           NI_AdvSimd_Arm64_CompareLessThan,           NI_AdvSimd_CompareLessThan,            NI_AdvSimd_Arm64_CompareLessThan},            SimdAsHWIntrinsicFlag::None)
ID(VectorT128, LessThanOrEqual,              2, {NI_AdvSimd_CompareLessThanOrEqual,    NI_AdvSimd_CompareLessThanOrEqual,    NI_AdvSimd_CompareLessThanOrEqual,    NI_AdvSimd_CompareLessThanOrEqual,    NI_AdvSimd_CompareLessThanOrEqual,    NI_AdvSimd_CompareLessThanOrEqual,    NI_AdvSimd_Arm64_CompareLessThanOrEqual,    NI_AdvSimd_Arm64_CompareLessThanOrEqual,    NI_AdvSimd_CompareLessThanOrEqual,     NI_AdvSimd_Arm64_CompareLessThanOrEqual},     SimdAsHWIntrinsicFlag::None)
ID(VectorT128, Max,                          2, {NI_AdvSimd_Max,                       NI_AdvSimd_Max,                       NI_AdvSimd_Max,                       NI_AdvSimd_Max,                       NI_AdvSimd_Max,                       NI_AdvSimd_Max,                       NI_VectorT128_Max,                          NI_VectorT128_Max,                          NI_AdvSimd_Max,                        NI_AdvSimd_Arm64_Max},                        SimdAsHWIntrinsicFlag::None)
ID(VectorT128, Min,                          2, {NI_AdvSimd_Min,                       NI_AdvSimd_Min,                       NI_AdvSimd_Min,                       NI_AdvSimd_Min,                       NI_AdvSimd_Min,                       NI_AdvSimd_Min,                       NI_VectorT128_Min,                          NI_VectorT128_Min,                          NI_AdvSimd_Min,                        NI_AdvSimd_Arm64_Min},                        SimdAsHWIntrinsicFlag::None)
ID(VectorT128, Narrow,                       2, {NI_Illegal,                           NI_Illegal,                           NI_VectorT128_Narrow,                 NI_VectorT128_Narrow,                 NI_VectorT128_Narrow,                 NI_VectorT128_Narrow,                 NI_VectorT128_Narrow,                       NI_VectorT128_Narrow,                       NI_Illegal,                            NI_VectorT128_Narrow},                        SimdAsHWIntrinsicFlag::None)
ID(VectorT128, op_Addition,                  2, {NI_AdvSimd_Add,                       NI_AdvSimd_Add,                       NI_AdvSimd_Add,                       NI_AdvSimd_Add,                       NI_AdvSimd_Add,                       NI_AdvSimd_Add,                       NI_AdvSimd_Add,                             NI_AdvSimd_Add,                             NI_AdvSimd_Add,                        NI_AdvSimd_Arm64_Add},                        SimdAsHWIntrinsicFlag::None)
ID(VectorT128, op_BitwiseAnd,                2, {NI_AdvSimd_And,                       NI_AdvSimd_And,                       NI_AdvSimd_And,                       NI_AdvSimd_And,                       NI_AdvSimd_And,                       NI_AdvSimd_And,                       NI_AdvSimd_And,                             NI_AdvSimd_And,                             NI_AdvSimd_And,                        NI_AdvSimd_And},                              SimdAsHWIntrinsicFlag::None)
ID(VectorT128, op_BitwiseOr,                 2, {NI_AdvSimd_Or,                        NI_AdvSimd_Or,                        NI_AdvSimd_Or,                        NI_AdvSimd_Or,                        NI_AdvSimd_Or,                        NI_AdvSimd_Or,                        NI_AdvSimd_Or,                              NI_AdvSimd_Or,                              NI_AdvSimd_Or,                         NI_AdvSimd_Or},                               SimdAsHWIntrinsicFlag::None)
ID(VectorT128, op_Division,                  2, {NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                                 NI_Illegal,                                 NI_AdvSimd_Arm64_Divide,               NI_AdvSimd_Arm64_Divide},                     SimdAsHWIntrinsicFlag::None)
ID(VectorT128, op_Equality,                  2, {NI_Vector128_op_Equality,             NI_Vector128_op_Equality,             NI_Vector128_op_Equality,             NI_Vector128_op_Equality,             NI_Vector128_op_Equality,             NI_Vector128_op_Equality,             NI_Vector128_op_Equality,                   NI_Vector128_op_Equality,                   NI_Vector128_op_Equality,              NI_Vector128_op_Equality},                    SimdAsHWIntrinsicFlag::None)
ID(VectorT128, op_ExclusiveOr,               2, {NI_AdvSimd_Xor,                       NI_AdvSimd_Xor,                       NI_AdvSimd_Xor,                       NI_AdvSimd_Xor,                       NI_AdvSimd_Xor,                       NI_AdvSimd_Xor,                       NI_AdvSimd_Xor,                             NI_AdvSimd_Xor,                             NI_AdvSimd_Xor,                        NI_AdvSimd_Xor},                              SimdAsHWIntrinsicFlag::None)
ID(VectorT128, op_Explicit,                  1, {NI_VectorT128_op_Explicit,            NI_VectorT128_op_Explicit,            NI_VectorT128_op_Explicit,            NI_VectorT128_op_Explicit,            NI_VectorT128_op_Explicit,            NI_VectorT128_op_Explicit,            NI_VectorT128_op_Explicit,                  NI_VectorT128_op_Explicit,                  NI_VectorT128_op_Explicit,             NI_VectorT128_op_Explicit},                   SimdAsHWIntrinsicFlag::None)
ID(VectorT128, op_Inequality,                2, {NI_Vector128_op_Inequality,           NI_Vector128_op_Inequality,           NI_Vector128_op_Inequality,           NI_Vector128_op_Inequality,           NI_Vector128_op_Inequality,           NI_Vector128_op_Inequality,           NI_Vector128_op_Inequality,                 NI_Vector128_op_Inequality,                 NI_Vector128_op_Inequality,            NI_Vector128_op_Inequality},                  SimdAsHWIntrinsicFlag::None)
ID(VectorT128, op_Multiply,                  2, {NI_VectorT128_op_Multiply,            NI_VectorT128_op_Multiply,            NI_VectorT128_op_Multiply,            NI_VectorT128_op_Multiply,            NI_VectorT128_op_Multiply,            NI_VectorT128_op_Multiply,            NI_Illegal,                                 NI_Illegal,                                 NI_VectorT128_op_Multiply,             NI_VectorT128_op_Multiply},                   SimdAsHWIntrinsicFlag::None)
ID(VectorT128, op_Subtraction,               2, {NI_AdvSimd_Subtract,                  NI_AdvSimd_Subtract,                  NI_AdvSimd_Subtract,                  NI_AdvSimd_Subtract,                  NI_AdvSimd_Subtract,                  NI_AdvSimd_Subtract,                  NI_AdvSimd_Subtract,                        NI_AdvSimd_Subtract,                        NI_AdvSimd_Subtract,                   NI_AdvSimd_Arm64_Subtract},                   SimdAsHWIntrinsicFlag::None)
ID(VectorT128, SquareRoot,                   1, {NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                           NI_Illegal,                                 NI_Illegal,                                 NI_AdvSimd_Arm64_Sqrt,                 NI_AdvSimd_Arm64_Sqrt},                       SimdAsHWIntrinsicFlag::None)
ID(VectorT128, Widen,                        3, {NI_VectorT128_Widen,                  NI_VectorT128_Widen,                  NI_VectorT128_Widen,                  NI_VectorT128_Widen,                  NI_VectorT128_Widen,                  NI_VectorT128_Widen,                  NI_Illegal,                                 NI_Illegal,                                 NI_VectorT128_Widen,                   NI_Illegal},                                  SimdAsHWIntrinsicFlag::None)

// clang-format on

#pragma pop_macro("ID")
#pragma pop_macro("NM")

#endif // FEATURE_HW_INTRINSICS

#undef SIMD_AS_HWINTRINSIC
