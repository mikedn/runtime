// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

#ifdef TARGET_XARCH

// x86 instructions for  the JIT compiler
//
// INST0-5 macro params:
//   id    - the enum name for the instruction
//   nm    - textual name (for assembly dipslay)
//   um    - update mode, see IUM_xx enum (rd, wr, or rw)
//   mr    - base encoding for R/M[reg] addressing mode
//   mi    - base encoding for R/M,icon addressing mode
//   rm    - base encoding for reg,R/M  addressing mode
//   a4    - base encoding for eax,i32  addressing mode
//   rr    - base encoding for register addressing mode
//   flags - flags, see INS_FLAGS_* enum
//
// The hex codes in this file represent the instruction encoding as follows
// (assuming that the first bitfield goes to the lowest bits):
//
// struct Code : uint32_t {
//     uint32_t opcode : 8;    // The main instruction opcode (always 1 byte)
//     uint32_t rm : 8;        // The entire RM byte, even if the opcode extension fits in 3 bits only
//     uint32_t mmm : 3;       // VEX/EVEX map field (3 bits only as VEXm3-4 aren't used)
//     uint32_t pp : 2;        // VEX/EVEX prefix field
//     uint32_t reserved : 3;  // Maybe use to indicate VEX presence instead of C4? VEX.l/EVX.ll bits?
//     uint32_t wrxb : 4;      // REX low 4 bits. RXB are always 0, to be set in code as needed.
//     uint32_t rex : 4;       // 0100 if REX is present. Potentially REX2 R4-X4-B4 bits in the future.
// }

#define PACK2(byte1, byte2) (((byte1) << 16) | (byte2))
#define PACK3(byte1, byte2, byte3) (((byte1) << 16) | ((byte2) << 24) | (byte3))

#define M0F 1
#define M0F38 2
#define M0F3A 3
#define MAPX 4
#define P66 (1 << 3)
#define PF3 (2 << 3)
#define PF2 (3 << 3)
#define REXW 0x48

#define hW1(c) PACK3(0, REXW, c)

#define h0F(c) PACK2(M0F, c)
#define h0FW1(c) PACK3(M0F, REXW, c)
#define hF30F(c) PACK2(PF3 | M0F, c)
#define hF20F(c) PACK2(PF2 | M0F, c)
#define h660F(c) PACK2(P66 | M0F, c)

#define h0F38(c) PACK2(M0F38, c)
#define h660F38(c) PACK2(P66 | M0F38, c)
#define h660F38W1(c) PACK3(P66 | M0F38, REXW, c)
#define hF20F38(c) PACK2(PF2 | M0F38, c)
#define hF30F38(c) PACK2(PF3 | M0F38, c)

#define h660F3A(c) PACK2(P66 | M0F3A, c)
#define h660F3AW1(c) PACK3(P66 | M0F3A, REXW, c)
#define hF20F3A(c) PACK2(PF2 | M0F3A, c)

#define RME(c, e) ((c) | ((e) << 11))
#define RMR(c, e) ((c) | ((e) << 11) | 0xC000) // Fences use RM.mod = 11 and ignore the reg fields

#ifndef INSTA
#define INSTA(...)
#endif
#pragma push_macro("NA")
#pragma push_macro("RD")
#pragma push_macro("WR")
#pragma push_macro("RW")
#define NA BAD_CODE
#define RD IUM_RD
#define RW IUM_RW
#define WR IUM_WR

// clang-format off
//    id                nm                  um  mr                 mi            rm            a4     rr      flags
INST5(invalid,          "INVALID",          RD, NA,                NA,           NA,           NA,    NA,     None)
                                                                       
INST5(push,             "push",             RD, RME(0xFF, 6),      0x68,         NA,           NA,    0x50,   None)
INST5(pop,              "pop",              WR, RME(0x8F, 0),      NA,           NA,           NA,    0x58,   None)
// Does not affect the stack tracking in the emitter                   
INST5(push_hide,        "push",             RD, RME(0xFF, 6),      0x68,         NA,           NA,    0x50,   None)
INST5(pop_hide,         "pop",              WR, RME(0x8F, 0),      NA,           NA,           NA,    0x58,   None)
#ifdef TARGET_X86                                                      
INST5(inc_s,            "inc",              RW, NA,                NA,           NA,           NA,    0x40,   IncDecFlags)
INST5(dec_s,            "dec",              RW, NA,                NA,           NA,           NA,    0x48,   IncDecFlags)
#endif                                                                 
INST5(bswap,            "bswap",            RW, 0xC80F,            NA,           NA,           NA,    0xC80F, None)
                                                                       
INST4(add,              "add",              RW, 0x01,              RME(0x81, 0), 0x03,         0x05,          AddSubFlags)
INST4(or,               "or",               RW, 0x09,              RME(0x81, 1), 0x0B,         0x0D,          BitwiseFlags)
INST4(adc,              "adc",              RW, 0x11,              RME(0x81, 2), 0x13,         0x15,          AddSubCarryFlags)
INST4(sbb,              "sbb",              RW, 0x19,              RME(0x81, 3), 0x1B,         0x1D,          AddSubCarryFlags)
INST4(and,              "and",              RW, 0x21,              RME(0x81, 4), 0x23,         0x25,          BitwiseFlags)
INST4(sub,              "sub",              RW, 0x29,              RME(0x81, 5), 0x2B,         0x2D,          AddSubFlags)
INST4(xor,              "xor",              RW, 0x31,              RME(0x81, 6), 0x33,         0x35,          BitwiseFlags)
INST4(cmp,              "cmp",              RD, 0x39,              RME(0x81, 7), 0x3B,         0x3D,          AddSubFlags)
INST4(test,             "test",             RD, 0x85,              RME(0xF7, 0), 0x85,         0xA9,          BitwiseFlags)
                                                                       
INST3(xchg,             "xchg",             RW, 0x87,              NA,           0x87,                        None)
INST3(mov,              "mov",              WR, 0x89,              RME(0xC7, 0), 0x8B,                        None)
INST3(movzx,            "movzx",            WR, NA,                NA,           h0F(0xB7),                   None)
#ifdef TARGET_AMD64                                                    
INST3(movsx,            "movsx",            WR, NA,                NA,           h0FW1(0xBF),                 None)
INST3(movsxd,           "movsxd",           WR, NA,                NA,           hW1(0x63),                   None)
#else
INST3(movsx,            "movsx",            WR, NA,                NA,           h0F(0xBF),                   None)
#endif
INST3(lea,              "lea",              WR, NA,                NA,           0x8D,                        None)
                                                                                     
INST3(imul,             "imul",             RW, NA,                NA,           h0F(0xAF),                   ImulFlags)
INST3(imuli,            "imul",             RD, NA,                NA,           0x69,                        ImulFlags)
                                                                       
INST3(bt,               "bt",               RD, h0F(0xA3),         NA,           h0F(0xA3),                   BitTestFlags)
INST3(bsf,              "bsf",              WR, NA,                NA,           h0F(0xBC),                   BitScanFlags)
INST3(bsr,              "bsr",              WR, NA,                NA,           h0F(0xBD),                   BitScanFlags)
                                                                       
INSTA(FIRST_CMOV, cmovo)                                               
INST3(cmovo,            "cmovo",            WR, NA,                NA,           h0F(0x40),                   CcFlags_o)
INST3(cmovno,           "cmovno",           WR, NA,                NA,           h0F(0x41),                   CcFlags_no)
INST3(cmovb,            "cmovb",            WR, NA,                NA,           h0F(0x42),                   CcFlags_b)
INST3(cmovae,           "cmovae",           WR, NA,                NA,           h0F(0x43),                   CcFlags_ae)
INST3(cmove,            "cmove",            WR, NA,                NA,           h0F(0x44),                   CcFlags_e)
INST3(cmovne,           "cmovne",           WR, NA,                NA,           h0F(0x45),                   CcFlags_ne)
INST3(cmovbe,           "cmovbe",           WR, NA,                NA,           h0F(0x46),                   CcFlags_be)
INST3(cmova,            "cmova",            WR, NA,                NA,           h0F(0x47),                   CcFlags_a)
INST3(cmovs,            "cmovs",            WR, NA,                NA,           h0F(0x48),                   CcFlags_s)
INST3(cmovns,           "cmovns",           WR, NA,                NA,           h0F(0x49),                   CcFlags_ns)
INST3(cmovp,            "cmovp",            WR, NA,                NA,           h0F(0x4A),                   CcFlags_p)
INST3(cmovnp,           "cmovnp",           WR, NA,                NA,           h0F(0x4B),                   CcFlags_np)
INST3(cmovl,            "cmovl",            WR, NA,                NA,           h0F(0x4C),                   CcFlags_l)
INST3(cmovge,           "cmovge",           WR, NA,                NA,           h0F(0x4D),                   CcFlags_ge)
INST3(cmovle,           "cmovle",           WR, NA,                NA,           h0F(0x4E),                   CcFlags_le)
INST3(cmovg,            "cmovg",            WR, NA,                NA,           h0F(0x4F),                   CcFlags_g)
INSTA(LAST_CMOV, cmovg)

INSTA(FIRST_SSE_INSTRUCTION, lfence)
INST3(lfence,           "lfence",           RD, h0F(RMR(0xAE, 5)), NA,           NA,                          None)
INST3(mfence,           "mfence",           RD, h0F(RMR(0xAE, 6)), NA,           NA,                          None)
INST3(sfence,           "sfence",           RD, h0F(RMR(0xAE, 7)), NA,           NA,                          None)
                                                                                                              
INST3(prefetchnta,      "prefetchnta",      RD, h0F(RME(0x18, 0)), NA,           NA,                          None)
INST3(prefetcht0,       "prefetcht0",       RD, h0F(RME(0x18, 1)), NA,           NA,                          None)
INST3(prefetcht1,       "prefetcht1",       RD, h0F(RME(0x18, 2)), NA,           NA,                          None)
INST3(prefetcht2,       "prefetcht2",       RD, h0F(RME(0x18, 3)), NA,           NA,                          None)
INST3(movnti,           "movnti",           WR, h0F(0xC3),         NA,           NA,                          None)
                                                                                    
INSTA(FIRST_VEX_INSTRUCTION, pmovmskb)                                          
INST3(pmovmskb,         "pmovmskb",         WR, NA,                NA,           h660F(0xD7),                 None)
INST3(movmskpd,         "movmskpd",         WR, NA,                NA,           h660F(0x50),                 None)
INST3(movd,             "movd",             WR, h660F(0x7E),       NA,           h660F(0x6E),                 None)
INST3(movq,             "movq",             WR, h660F(0xD6),       NA,           hF30F(0x7E),                 None)
INST3(movsd,            "movsd",            WR, hF20F(0x11),       NA,           hF20F(0x10),                 VexDstSrcSrc)
INST3(punpckldq,        "punpckldq",        WR, NA,                NA,           h660F(0x62),                 VexDstDstSrc)
INST3(xorps,            "xorps",            WR, NA,                NA,           h0F(0x57),                   VexDstDstSrc)
INST3(cvttsd2si,        "cvttsd2si",        WR, NA,                NA,           hF20F(0x2C),                 None)
INST3(movntdq,          "movntdq",          WR, h660F(0xE7),       NA,           NA,                          None)
INST3(movntpd,          "movntpd",          WR, h660F(0x2B),       NA,           NA,                          None)
INST3(movntps,          "movntps",          WR, h0F(0x2B),         NA,           NA,                          None)
INST3(movdqu,           "movdqu",           WR, hF30F(0x7F),       NA,           hF30F(0x6F),                 None)
INST3(movdqa,           "movdqa",           WR, h660F(0x7F),       NA,           h660F(0x6F),                 None)
INST3(movlpd,           "movlpd",           WR, h660F(0x13),       NA,           h660F(0x12),                 VexDstSrcSrc)
INST3(movlps,           "movlps",           WR, h0F(0x13),         NA,           h0F(0x12),                   VexDstSrcSrc)
INST3(movhpd,           "movhpd",           WR, h660F(0x17),       NA,           h660F(0x16),                 VexDstSrcSrc)
INST3(movhps,           "movhps",           WR, h0F(0x17),         NA,           h0F(0x16),                   VexDstSrcSrc)
INST3(movss,            "movss",            WR, hF30F(0x11),       NA,           hF30F(0x10),                 VexDstSrcSrc)
INST3(movapd,           "movapd",           WR, h660F(0x29),       NA,           h660F(0x28),                 None)
INST3(movaps,           "movaps",           WR, h0F(0x29),         NA,           h0F(0x28),                   None)
INST3(movupd,           "movupd",           WR, h660F(0x11),       NA,           h660F(0x10),                 None)
INST3(movups,           "movups",           WR, h0F(0x11),         NA,           h0F(0x10),                   None)
INST3(movhlps,          "movhlps",          WR, NA,                NA,           h0F(0x12),                   VexDstDstSrc)
INST3(movlhps,          "movlhps",          WR, NA,                NA,           h0F(0x16),                   VexDstDstSrc)
INST3(movmskps,         "movmskps",         WR, NA,                NA,           h0F(0x50),                   None)
INST3(unpckhps,         "unpckhps",         WR, NA,                NA,           h0F(0x15),                   VexDstDstSrc)
INST3(unpcklps,         "unpcklps",         WR, NA,                NA,           h0F(0x14),                   VexDstDstSrc)
INST3(maskmovdqu,       "maskmovdqu",       WR, NA,                NA,           h660F(0xF7),                 None)
INST3(shufps,           "shufps",           WR, NA,                NA,           h0F(0xC6),                   VexDstDstSrc)
INST3(shufpd,           "shufpd",           WR, NA,                NA,           h660F(0xC6),                 VexDstDstSrc)
INST3(punpckhdq,        "punpckhdq",        WR, NA,                NA,           h660F(0x6A),                 VexDstDstSrc)
INST3(addps,            "addps",            WR, NA,                NA,           h0F(0x58),                   VexDstDstSrc)
INST3(addss,            "addss",            WR, NA,                NA,           hF30F(0x58),                 VexDstDstSrc)
INST3(addpd,            "addpd",            WR, NA,                NA,           h660F(0x58),                 VexDstDstSrc)
INST3(addsd,            "addsd",            WR, NA,                NA,           hF20F(0x58),                 VexDstDstSrc)
INST3(mulps,            "mulps",            WR, NA,                NA,           h0F(0x59),                   VexDstDstSrc)
INST3(mulss,            "mulss",            WR, NA,                NA,           hF30F(0x59),                 VexDstDstSrc)
INST3(mulpd,            "mulpd",            WR, NA,                NA,           h660F(0x59),                 VexDstDstSrc)
INST3(mulsd,            "mulsd",            WR, NA,                NA,           hF20F(0x59),                 VexDstDstSrc)
INST3(subps,            "subps",            WR, NA,                NA,           h0F(0x5C),                   VexDstDstSrc)
INST3(subss,            "subss",            WR, NA,                NA,           hF30F(0x5C),                 VexDstDstSrc)
INST3(subpd,            "subpd",            WR, NA,                NA,           h660F(0x5C),                 VexDstDstSrc)
INST3(subsd,            "subsd",            WR, NA,                NA,           hF20F(0x5C),                 VexDstDstSrc)
INST3(minps,            "minps",            WR, NA,                NA,           h0F(0x5D),                   VexDstDstSrc)
INST3(minss,            "minss",            WR, NA,                NA,           hF30F(0x5D),                 VexDstDstSrc)
INST3(minpd,            "minpd",            WR, NA,                NA,           h660F(0x5D),                 VexDstDstSrc)
INST3(minsd,            "minsd",            WR, NA,                NA,           hF20F(0x5D),                 VexDstDstSrc)
INST3(divps,            "divps",            WR, NA,                NA,           h0F(0x5E),                   VexDstDstSrc)
INST3(divss,            "divss",            WR, NA,                NA,           hF30F(0x5E),                 VexDstDstSrc)
INST3(divpd,            "divpd",            WR, NA,                NA,           h660F(0x5E),                 VexDstDstSrc)
INST3(divsd,            "divsd",            WR, NA,                NA,           hF20F(0x5E),                 VexDstDstSrc)
INST3(maxps,            "maxps",            WR, NA,                NA,           h0F(0x5F),                   VexDstDstSrc)
INST3(maxss,            "maxss",            WR, NA,                NA,           hF30F(0x5F),                 VexDstDstSrc)
INST3(maxpd,            "maxpd",            WR, NA,                NA,           h660F(0x5F),                 VexDstDstSrc)
INST3(maxsd,            "maxsd",            WR, NA,                NA,           hF20F(0x5F),                 VexDstDstSrc)
INST3(xorpd,            "xorpd",            WR, NA,                NA,           h660F(0x57),                 VexDstDstSrc)
INST3(andps,            "andps",            WR, NA,                NA,           h0F(0x54),                   VexDstDstSrc)
INST3(andpd,            "andpd",            WR, NA,                NA,           h660F(0x54),                 VexDstDstSrc)
INST3(sqrtps,           "sqrtps",           WR, NA,                NA,           h0F(0x51),                   None)
INST3(sqrtss,           "sqrtss",           WR, NA,                NA,           hF30F(0x51),                 VexDstSrcSrc)
INST3(sqrtpd,           "sqrtpd",           WR, NA,                NA,           h660F(0x51),                 None)
INST3(sqrtsd,           "sqrtsd",           WR, NA,                NA,           hF20F(0x51),                 VexDstSrcSrc)
INST3(andnps,           "andnps",           WR, NA,                NA,           h0F(0x55),                   VexDstDstSrc)
INST3(andnpd,           "andnpd",           WR, NA,                NA,           h660F(0x55),                 VexDstDstSrc)
INST3(orps,             "orps",             WR, NA,                NA,           h0F(0x56),                   VexDstDstSrc)
INST3(orpd,             "orpd",             WR, NA,                NA,           h660F(0x56),                 VexDstDstSrc)
INST3(haddpd,           "haddpd",           WR, NA,                NA,           h660F(0x7C),                 VexDstDstSrc)
INST3(haddps,           "haddps",           WR, NA,                NA,           hF20F(0x7C),                 VexDstDstSrc)
INST3(hsubpd,           "hsubpd",           WR, NA,                NA,           h660F(0x7D),                 VexDstDstSrc)
INST3(hsubps,           "hsubps",           WR, NA,                NA,           hF20F(0x7D),                 VexDstDstSrc)
INST3(addsubps,         "addsubps",         WR, NA,                NA,           hF20F(0xD0),                 VexDstDstSrc)
INST3(addsubpd,         "addsubpd",         WR, NA,                NA,           h660F(0xD0),                 VexDstDstSrc)
INST3(rcpps,            "rcpps",            WR, NA,                NA,           h0F(0x53),                   None)
INST3(rcpss,            "rcpss",            WR, NA,                NA,           hF30F(0x53),                 VexDstSrcSrc)
INST3(rsqrtps,          "rsqrtps",          WR, NA,                NA,           h0F(0x52),                   None)
INST3(rsqrtss,          "rsqrtss",          WR, NA,                NA,           hF30F(0x52),                 VexDstSrcSrc)
INST3(cvtpi2ps,         "cvtpi2ps",         WR, NA,                NA,           h0F(0x2A),                   None)
INST3(cvtsi2ss,         "cvtsi2ss",         WR, NA,                NA,           hF30F(0x2A),                 VexDstDstSrc)
INST3(cvtpi2pd,         "cvtpi2pd",         WR, NA,                NA,           h660F(0x2A),                 None)
INST3(cvtsi2sd,         "cvtsi2sd",         WR, NA,                NA,           hF20F(0x2A),                 VexDstDstSrc)
INST3(cvttps2pi,        "cvttps2pi",        WR, NA,                NA,           h0F(0x2C),                   None)
INST3(cvttss2si,        "cvttss2si",        WR, NA,                NA,           hF30F(0x2C),                 None)
INST3(cvttpd2pi,        "cvttpd2pi",        WR, NA,                NA,           h660F(0x2C),                 None)
INST3(cvtps2pi,         "cvtps2pi",         WR, NA,                NA,           h0F(0x2D),                   None)
INST3(cvtss2si,         "cvtss2si",         WR, NA,                NA,           hF30F(0x2D),                 None)
INST3(cvtpd2pi,         "cvtpd2pi",         WR, NA,                NA,           h660F(0x2D),                 None)
INST3(cvtsd2si,         "cvtsd2si",         WR, NA,                NA,           hF20F(0x2D),                 None)
INST3(cvtps2pd,         "cvtps2pd",         WR, NA,                NA,           h0F(0x5A),                   None)
INST3(cvtpd2ps,         "cvtpd2ps",         WR, NA,                NA,           h660F(0x5A),                 None)
INST3(cvtss2sd,         "cvtss2sd",         WR, NA,                NA,           hF30F(0x5A),                 VexDstDstSrc)
INST3(cvtsd2ss,         "cvtsd2ss",         WR, NA,                NA,           hF20F(0x5A),                 VexDstDstSrc)
INST3(cvtdq2ps,         "cvtdq2ps",         WR, NA,                NA,           h0F(0x5B),                   None)
INST3(cvtps2dq,         "cvtps2dq",         WR, NA,                NA,           h660F(0x5B),                 None)
INST3(cvttps2dq,        "cvttps2dq",        WR, NA,                NA,           hF30F(0x5B),                 None)
INST3(cvtpd2dq,         "cvtpd2dq",         WR, NA,                NA,           hF20F(0xE6),                 None)
INST3(cvttpd2dq,        "cvttpd2dq",        WR, NA,                NA,           h660F(0xE6),                 None)
INST3(cvtdq2pd,         "cvtdq2pd",         WR, NA,                NA,           hF30F(0xE6),                 None)
INST3(comiss,           "comiss",           RD, NA,                NA,           h0F(0x2F),                   FComFlags)
INST3(comisd,           "comisd",           RD, NA,                NA,           h660F(0x2F),                 FComFlags)
INST3(ucomiss,          "ucomiss",          RD, NA,                NA,           h0F(0x2E),                   FComFlags)
INST3(ucomisd,          "ucomisd",          RD, NA,                NA,           h660F(0x2E),                 FComFlags)
INST3(cmpps,            "cmpps",            WR, NA,                NA,           h0F(0xC2),                   VexDstDstSrc)
INST3(cmppd,            "cmppd",            WR, NA,                NA,           h660F(0xC2),                 VexDstDstSrc)
INST3(cmpss,            "cmpss",            WR, NA,                NA,           hF30F(0xC2),                 VexDstDstSrc)
INST3(cmpsd,            "cmpsd",            WR, NA,                NA,           hF20F(0xC2),                 VexDstDstSrc)
INST3(paddb,            "paddb",            WR, NA,                NA,           h660F(0xFC),                 VexDstDstSrc)
INST3(paddw,            "paddw",            WR, NA,                NA,           h660F(0xFD),                 VexDstDstSrc)
INST3(paddd,            "paddd",            WR, NA,                NA,           h660F(0xFE),                 VexDstDstSrc)
INST3(paddq,            "paddq",            WR, NA,                NA,           h660F(0xD4),                 VexDstDstSrc)
INST3(paddsb,           "paddsb",           WR, NA,                NA,           h660F(0xEC),                 VexDstDstSrc)
INST3(paddsw,           "paddsw",           WR, NA,                NA,           h660F(0xED),                 VexDstDstSrc)
INST3(paddusb,          "paddusb",          WR, NA,                NA,           h660F(0xDC),                 VexDstDstSrc)
INST3(paddusw,          "paddusw",          WR, NA,                NA,           h660F(0xDD),                 VexDstDstSrc)
INST3(pavgb,            "pavgb",            WR, NA,                NA,           h660F(0xE0),                 VexDstDstSrc)
INST3(pavgw,            "pavgw",            WR, NA,                NA,           h660F(0xE3),                 VexDstDstSrc)
INST3(psubb,            "psubb",            WR, NA,                NA,           h660F(0xF8),                 VexDstDstSrc)
INST3(psubw,            "psubw",            WR, NA,                NA,           h660F(0xF9),                 VexDstDstSrc)
INST3(psubd,            "psubd",            WR, NA,                NA,           h660F(0xFA),                 VexDstDstSrc)
INST3(psubq,            "psubq",            WR, NA,                NA,           h660F(0xFB),                 VexDstDstSrc)
INST3(pmaddwd,          "pmaddwd",          WR, NA,                NA,           h660F(0xF5),                 VexDstDstSrc)
INST3(pmulhw,           "pmulhw",           WR, NA,                NA,           h660F(0xE5),                 VexDstDstSrc)
INST3(pmulhuw,          "pmulhuw",          WR, NA,                NA,           h660F(0xE4),                 VexDstDstSrc)
INST3(pmuludq,          "pmuludq",          WR, NA,                NA,           h660F(0xF4),                 VexDstDstSrc)
INST3(pmullw,           "pmullw",           WR, NA,                NA,           h660F(0xD5),                 VexDstDstSrc)
INST3(pand,             "pand",             WR, NA,                NA,           h660F(0xDB),                 VexDstDstSrc)
INST3(pandn,            "pandn",            WR, NA,                NA,           h660F(0xDF),                 VexDstDstSrc)
INST3(por,              "por",              WR, NA,                NA,           h660F(0xEB),                 VexDstDstSrc)
INST3(pxor,             "pxor",             WR, NA,                NA,           h660F(0xEF),                 VexDstDstSrc)
INST3(psadbw,           "psadbw",           WR, NA,                NA,           h660F(0xF6),                 VexDstDstSrc)
INST3(psubsb,           "psubsb",           WR, NA,                NA,           h660F(0xE8),                 VexDstDstSrc)
INST3(psubusb,          "psubusb",          WR, NA,                NA,           h660F(0xD8),                 VexDstDstSrc)
INST3(psubsw,           "psubsw",           WR, NA,                NA,           h660F(0xE9),                 VexDstDstSrc)
INST3(psubusw,          "psubusw",          WR, NA,                NA,           h660F(0xD9),                 VexDstDstSrc)
                                                                                                                  
INST3(psrldq,           "psrldq",           WR, NA,     h660F(RME(0x73, 3)),     NA,                          VexDstDstSrc)
INST3(pslldq,           "pslldq",           WR, NA,     h660F(RME(0x73, 7)),     NA,                          VexDstDstSrc)
INST3(psllw,            "psllw",            WR, NA,     h660F(RME(0x71, 6)),     h660F(0xF1),                 VexDstDstSrc)
INST3(pslld,            "pslld",            WR, NA,     h660F(RME(0x72, 6)),     h660F(0xF2),                 VexDstDstSrc)
INST3(psllq,            "psllq",            WR, NA,     h660F(RME(0x73, 6)),     h660F(0xF3),                 VexDstDstSrc)
INST3(psrlw,            "psrlw",            WR, NA,     h660F(RME(0x71, 2)),     h660F(0xD1),                 VexDstDstSrc)
INST3(psrld,            "psrld",            WR, NA,     h660F(RME(0x72, 2)),     h660F(0xD2),                 VexDstDstSrc)
INST3(psrlq,            "psrlq",            WR, NA,     h660F(RME(0x73, 2)),     h660F(0xD3),                 VexDstDstSrc)
INST3(psraw,            "psraw",            WR, NA,     h660F(RME(0x71, 4)),     h660F(0xE1),                 VexDstDstSrc)
INST3(psrad,            "psrad",            WR, NA,     h660F(RME(0x72, 4)),     h660F(0xE2),                 VexDstDstSrc)
                                                                                                                  
INST3(pmaxub,           "pmaxub",           WR, NA,                NA,     h660F(0xDE),                       VexDstDstSrc)
INST3(pminub,           "pminub",           WR, NA,                NA,     h660F(0xDA),                       VexDstDstSrc)
INST3(pmaxsw,           "pmaxsw",           WR, NA,                NA,     h660F(0xEE),                       VexDstDstSrc)
INST3(pminsw,           "pminsw",           WR, NA,                NA,     h660F(0xEA),                       VexDstDstSrc)
INST3(pcmpeqd,          "pcmpeqd",          WR, NA,                NA,     h660F(0x76),                       VexDstDstSrc)
INST3(pcmpgtd,          "pcmpgtd",          WR, NA,                NA,     h660F(0x66),                       VexDstDstSrc)
INST3(pcmpeqw,          "pcmpeqw",          WR, NA,                NA,     h660F(0x75),                       VexDstDstSrc)
INST3(pcmpgtw,          "pcmpgtw",          WR, NA,                NA,     h660F(0x65),                       VexDstDstSrc)
INST3(pcmpeqb,          "pcmpeqb",          WR, NA,                NA,     h660F(0x74),                       VexDstDstSrc)
INST3(pcmpgtb,          "pcmpgtb",          WR, NA,                NA,     h660F(0x64),                       VexDstDstSrc)
INST3(pshufd,           "pshufd",           WR, NA,                NA,     h660F(0x70),                       None)
INST3(pshufhw,          "pshufhw",          WR, NA,                NA,     hF30F(0x70),                       None)
INST3(pshuflw,          "pshuflw",          WR, NA,                NA,     hF20F(0x70),                       None)
INST3(pextrw,           "pextrw",           WR, NA,                NA,     h660F(0xC5),                       None)
INST3(pinsrw,           "pinsrw",           WR, NA,                NA,     h660F(0xC4),                       VexDstDstSrc)
INST3(punpckhbw,        "punpckhbw",        WR, NA,                NA,     h660F(0x68),                       VexDstDstSrc)
INST3(punpcklbw,        "punpcklbw",        WR, NA,                NA,     h660F(0x60),                       VexDstDstSrc)
INST3(punpckhqdq,       "punpckhqdq",       WR, NA,                NA,     h660F(0x6D),                       VexDstDstSrc)
INST3(punpcklqdq,       "punpcklqdq",       WR, NA,                NA,     h660F(0x6C),                       VexDstDstSrc)
INST3(punpckhwd,        "punpckhwd",        WR, NA,                NA,     h660F(0x69),                       VexDstDstSrc)
INST3(punpcklwd,        "punpcklwd",        WR, NA,                NA,     h660F(0x61),                       VexDstDstSrc)
INST3(unpckhpd,         "unpckhpd",         WR, NA,                NA,     h660F(0x15),                       VexDstDstSrc)
INST3(unpcklpd,         "unpcklpd",         WR, NA,                NA,     h660F(0x14),                       VexDstDstSrc)
INST3(packssdw,         "packssdw",         WR, NA,                NA,     h660F(0x6B),                       VexDstDstSrc)
INST3(packsswb,         "packsswb",         WR, NA,                NA,     h660F(0x63),                       VexDstDstSrc)
INST3(packuswb,         "packuswb",         WR, NA,                NA,     h660F(0x67),                       VexDstDstSrc)
                                                                                                                  
INST3(dpps,             "dpps",             WR, NA,                NA,     h660F3A(0x40),                     VexDstDstSrc)
INST3(dppd,             "dppd",             WR, NA,                NA,     h660F3A(0x41),                     VexDstDstSrc)
INST3(insertps,         "insertps",         WR, NA,                NA,     h660F3A(0x21),                     VexDstDstSrc)
INST3(pcmpeqq,          "pcmpeqq",          WR, NA,                NA,     h660F38(0x29),                     VexDstDstSrc)
INST3(pcmpgtq,          "pcmpgtq",          WR, NA,                NA,     h660F38(0x37),                     VexDstDstSrc)
INST3(pmulld,           "pmulld",           WR, NA,                NA,     h660F38(0x40),                     VexDstDstSrc)
INST3(ptest,            "ptest",            WR, NA,                NA,     h660F38(0x17),                     None)
INST3(phaddd,           "phaddd",           WR, NA,                NA,     h660F38(0x02),                     VexDstDstSrc)
INST3(pabsb,            "pabsb",            WR, NA,                NA,     h660F38(0x1C),                     None)
INST3(pabsw,            "pabsw",            WR, NA,                NA,     h660F38(0x1D),                     None)
INST3(pabsd,            "pabsd",            WR, NA,                NA,     h660F38(0x1E),                     None)
INST3(palignr,          "palignr",          WR, NA,                NA,     h660F3A(0x0F),                     VexDstDstSrc)
INST3(pmaddubsw,        "pmaddubsw",        WR, NA,                NA,     h660F38(0x04),                     VexDstDstSrc)
INST3(pmulhrsw,         "pmulhrsw",         WR, NA,                NA,     h660F38(0x0B),                     VexDstDstSrc)
INST3(pshufb,           "pshufb",           WR, NA,                NA,     h660F38(0x00),                     VexDstDstSrc)
INST3(psignb,           "psignb",           WR, NA,                NA,     h660F38(0x08),                     VexDstDstSrc)
INST3(psignw,           "psignw",           WR, NA,                NA,     h660F38(0x09),                     VexDstDstSrc)
INST3(psignd,           "psignd",           WR, NA,                NA,     h660F38(0x0A),                     VexDstDstSrc)
INST3(pminsb,           "pminsb",           WR, NA,                NA,     h660F38(0x38),                     VexDstDstSrc)
INST3(pminsd,           "pminsd",           WR, NA,                NA,     h660F38(0x39),                     VexDstDstSrc)
INST3(pminuw,           "pminuw",           WR, NA,                NA,     h660F38(0x3A),                     VexDstDstSrc)
INST3(pminud,           "pminud",           WR, NA,                NA,     h660F38(0x3B),                     VexDstDstSrc)
INST3(pmaxsb,           "pmaxsb",           WR, NA,                NA,     h660F38(0x3C),                     VexDstDstSrc)
INST3(pmaxsd,           "pmaxsd",           WR, NA,                NA,     h660F38(0x3D),                     VexDstDstSrc)
INST3(pmaxuw,           "pmaxuw",           WR, NA,                NA,     h660F38(0x3E),                     VexDstDstSrc)
INST3(pmaxud,           "pmaxud",           WR, NA,                NA,     h660F38(0x3F),                     VexDstDstSrc)
INST3(pmovsxbw,         "pmovsxbw",         WR, NA,                NA,     h660F38(0x20),                     None)
INST3(pmovsxbd,         "pmovsxbd",         WR, NA,                NA,     h660F38(0x21),                     None)
INST3(pmovsxbq,         "pmovsxbq",         WR, NA,                NA,     h660F38(0x22),                     None)
INST3(pmovsxwd,         "pmovsxwd",         WR, NA,                NA,     h660F38(0x23),                     None)
INST3(pmovsxwq,         "pmovsxwq",         WR, NA,                NA,     h660F38(0x24),                     None)
INST3(pmovsxdq,         "pmovsxdq",         WR, NA,                NA,     h660F38(0x25),                     None)
INST3(pmovzxbw,         "pmovzxbw",         WR, NA,                NA,     h660F38(0x30),                     None)
INST3(pmovzxbd,         "pmovzxbd",         WR, NA,                NA,     h660F38(0x31),                     None)
INST3(pmovzxbq,         "pmovzxbq",         WR, NA,                NA,     h660F38(0x32),                     None)
INST3(pmovzxwd,         "pmovzxwd",         WR, NA,                NA,     h660F38(0x33),                     None)
INST3(pmovzxwq,         "pmovzxwq",         WR, NA,                NA,     h660F38(0x34),                     None)
INST3(pmovzxdq,         "pmovzxdq",         WR, NA,                NA,     h660F38(0x35),                     None)
INST3(packusdw,         "packusdw",         WR, NA,                NA,     h660F38(0x2B),                     VexDstDstSrc)
INST3(roundps,          "roundps",          WR, NA,                NA,     h660F3A(0x08),                     None)
INST3(roundss,          "roundss",          WR, NA,                NA,     h660F3A(0x0A),                     VexDstSrcSrc)
INST3(roundpd,          "roundpd",          WR, NA,                NA,     h660F3A(0x09),                     None)
INST3(roundsd,          "roundsd",          WR, NA,                NA,     h660F3A(0x0B),                     VexDstSrcSrc)
INST3(pmuldq,           "pmuldq",           WR, NA,                NA,     h660F38(0x28),                     VexDstDstSrc)
INST3(blendps,          "blendps",          WR, NA,                NA,     h660F3A(0x0C),                     VexDstDstSrc)
INST3(blendvps,         "blendvps",         WR, NA,                NA,     h660F38(0x14),                     None)
INST3(blendpd,          "blendpd",          WR, NA,                NA,     h660F3A(0x0D),                     VexDstDstSrc)
INST3(blendvpd,         "blendvpd",         WR, NA,                NA,     h660F38(0x15),                     None)
INST3(pblendw,          "pblendw",          WR, NA,                NA,     h660F3A(0x0E),                     VexDstDstSrc)
INST3(pblendvb,         "pblendvb",         WR, NA,                NA,     h660F38(0x10),                     None)
INST3(phaddw,           "phaddw",           WR, NA,                NA,     h660F38(0x01),                     VexDstDstSrc)
INST3(phsubw,           "phsubw",           WR, NA,                NA,     h660F38(0x05),                     VexDstDstSrc)
INST3(phsubd,           "phsubd",           WR, NA,                NA,     h660F38(0x06),                     VexDstDstSrc)
INST3(phaddsw,          "phaddsw",          WR, NA,                NA,     h660F38(0x03),                     VexDstDstSrc)
INST3(phsubsw,          "phsubsw",          WR, NA,                NA,     h660F38(0x07),                     VexDstDstSrc)
INST3(lddqu,            "lddqu",            WR, NA,                NA,     hF20F(0xF0),                       None)
INST3(movntdqa,         "movntdqa",         WR, NA,                NA,     h660F38(0x2A),                     None)
INST3(movddup,          "movddup",          WR, NA,                NA,     hF20F(0x12),                       None)
INST3(movsldup,         "movsldup",         WR, NA,                NA,     hF30F(0x12),                       None)
INST3(movshdup,         "movshdup",         WR, NA,                NA,     hF30F(0x16),                       None)
INST3(phminposuw,       "phminposuw",       WR, NA,                NA,     h660F38(0x41),                     None)
INST3(mpsadbw,          "mpsadbw",          WR, NA,                NA,     h660F3A(0x42),                     VexDstDstSrc)
INST3(pinsrb,           "pinsrb",           WR, NA,                NA,     h660F3A(0x20),                     VexDstDstSrc)
INST3(pinsrd,           "pinsrd",           WR, NA,                NA,     h660F3A(0x22),                     VexDstDstSrc)
INST3(pinsrq,           "pinsrq",           WR, NA,                NA,     h660F3AW1(0x22),                   VexDstDstSrc)
INST3(pextrb,           "pextrb",           WR, h660F3A(0x14),     NA,     NA,                                None)
INST3(pextrd,           "pextrd",           WR, h660F3A(0x16),     NA,     NA,                                None)
INST3(pextrq,           "pextrq",           WR, h660F3AW1(0x16),   NA,     NA,                                None)
INST3(pextrw_sse41,     "pextrw",           WR, h660F3A(0x15),     NA,     NA,                                None)
INST3(extractps,        "extractps",        WR, h660F3A(0x17),     NA,     NA,                                None)
INST3(pclmulqdq,        "pclmulqdq" ,       WR, NA,                NA,     h660F3A(0x44),                     VexDstDstSrc)
INST3(aesdec,           "aesdec",           WR, NA,                NA,     h660F38(0xDE),                     VexDstDstSrc)
INST3(aesdeclast,       "aesdeclast",       WR, NA,                NA,     h660F38(0xDF),                     VexDstDstSrc)
INST3(aesenc,           "aesenc",           WR, NA,                NA,     h660F38(0xDC),                     VexDstDstSrc)
INST3(aesenclast,       "aesenclast",       WR, NA,                NA,     h660F38(0xDD),                     VexDstDstSrc)
INST3(aesimc,           "aesimc",           WR, NA,                NA,     h660F38(0xDB),                     None)
INST3(aeskeygenassist,  "aeskeygenassist",  WR, NA,                NA,     h660F3A(0xDF),                     None)
INSTA(LAST_SSE_INSTRUCTION, aeskeygenassist)                                                                      
                                                                                                                  
//INSTA(FIRST_AVX_INSTRUCTION, vbroadcastss)                                                                      
INST3(vbroadcastss,     "vbroadcastss",     WR, NA,                NA,     h660F38(0x18),                     None)
INST3(vbroadcastsd,     "vbroadcastsd",     WR, NA,                NA,     h660F38(0x19),                     None)
INST3(vpbroadcastb,     "vpbroadcastb",     WR, NA,                NA,     h660F38(0x78),                     None)
INST3(vpbroadcastw,     "vpbroadcastw",     WR, NA,                NA,     h660F38(0x79),                     None)
INST3(vpbroadcastd,     "vpbroadcastd",     WR, NA,                NA,     h660F38(0x58),                     None)
INST3(vpbroadcastq,     "vpbroadcastq",     WR, NA,                NA,     h660F38(0x59),                     None)
INST3(vextractf128,     "vextractf128",     WR, h660F3A(0x19),     NA,     NA,                                None)
INST3(vextracti128,     "vextracti128",     WR, h660F3A(0x39),     NA,     NA,                                None)
INST3(vinsertf128,      "vinsertf128",      WR, NA,                NA,     h660F3A(0x18),                     VexDstDstSrc)
INST3(vinserti128,      "vinserti128",      WR, NA,                NA,     h660F3A(0x38),                     VexDstDstSrc)
INST3(vperm2i128,       "vperm2i128",       WR, NA,                NA,     h660F3A(0x46),                     VexDstDstSrc)
INST3(vpermq,           "vpermq",           WR, NA,                NA,     h660F3AW1(0x00),                   None)
INST3(vpblendd,         "vpblendd",         WR, NA,                NA,     h660F3A(0x02),                     VexDstDstSrc)
INST3(vblendvps,        "vblendvps",        WR, NA,                NA,     h660F3A(0x4A),                     VexDstDstSrc)
INST3(vblendvpd,        "vblendvpd",        WR, NA,                NA,     h660F3A(0x4B),                     VexDstDstSrc)
INST3(vpblendvb,        "vpblendvb",        WR, NA,                NA,     h660F3A(0x4C),                     VexDstDstSrc)
INST3(vtestps,          "vtestps",          WR, NA,                NA,     h660F38(0x0E),                     None)
INST3(vtestpd,          "vtestpd",          WR, NA,                NA,     h660F38(0x0F),                     None)
INST3(vpsrlvd,          "vpsrlvd",          WR, NA,                NA,     h660F38(0x45),                     VexDstDstSrc)
INST3(vpsrlvq,          "vpsrlvq",          WR, NA,                NA,     h660F38W1(0x45),                   VexDstDstSrc)
INST3(vpsravd,          "vpsravd",          WR, NA,                NA,     h660F38(0x46),                     VexDstDstSrc)
INST3(vpsllvd,          "vpsllvd",          WR, NA,                NA,     h660F38(0x47),                     VexDstDstSrc)
INST3(vpsllvq,          "vpsllvq",          WR, NA,                NA,     h660F38W1(0x47),                   VexDstDstSrc)
INST3(vpermilps,        "vpermilps",        WR, NA,                NA,     h660F3A(0x04),                     None)
INST3(vpermilpd,        "vpermilpd",        WR, NA,                NA,     h660F3A(0x05),                     None)
INST3(vpermilpsvar,     "vpermilpsvar",     WR, NA,                NA,     h660F38(0x0C),                     VexDstDstSrc)
INST3(vpermilpdvar,     "vpermilpdvar",     WR, NA,                NA,     h660F38(0x0D),                     VexDstDstSrc)
INST3(vperm2f128,       "vperm2f128",       WR, NA,                NA,     h660F3A(0x06),                     VexDstDstSrc)
INST3(vpermpd,          "vpermpd",          WR, NA,                NA,     h660F3AW1(0x01),                   None)
INST3(vpermd,           "vpermd",           WR, NA,                NA,     h660F38(0x36),                     VexDstDstSrc)
INST3(vpermps,          "vpermps",          WR, NA,                NA,     h660F38(0x16),                     VexDstDstSrc)
INST3(vbroadcastf128,   "vbroadcastf128",   WR, NA,                NA,     h660F38(0x1A),                     None)
INST3(vbroadcasti128,   "vbroadcasti128",   WR, NA,                NA,     h660F38(0x5A),                     None)
INST3(vmaskmovps,       "vmaskmovps",       WR, h660F38(0x2E),     NA,     h660F38(0x2C),                     VexDstDstSrc)
INST3(vmaskmovpd,       "vmaskmovpd",       WR, h660F38(0x2F),     NA,     h660F38(0x2D),                     VexDstDstSrc)
INST3(vpmaskmovd,       "vpmaskmovd",       WR, h660F38(0x8E),     NA,     h660F38(0x8C),                     VexDstDstSrc)
INST3(vpmaskmovq,       "vpmaskmovq",       WR, h660F38W1(0x8E),   NA,     h660F38W1(0x8C),                   VexDstDstSrc)

INSTA(FIRST_AVX2_GATHER_INSTRUCTION, vpgatherdd)
INST3(vpgatherdd,       "vpgatherdd",       WR, NA,                NA,     h660F38(0x90),                     VexDstDstSrc)
INST3(vpgatherqd,       "vpgatherqd",       WR, NA,                NA,     h660F38(0x91),                     VexDstDstSrc)
INST3(vpgatherdq,       "vpgatherdq",       WR, NA,                NA,     h660F38W1(0x90),                   VexDstDstSrc)
INST3(vpgatherqq,       "vpgatherqq",       WR, NA,                NA,     h660F38W1(0x91),                   VexDstDstSrc)
INST3(vgatherdps,       "vgatherdps",       WR, NA,                NA,     h660F38(0x92),                     VexDstDstSrc)
INST3(vgatherqps,       "vgatherqps",       WR, NA,                NA,     h660F38(0x93),                     VexDstDstSrc)
INST3(vgatherdpd,       "vgatherdpd",       WR, NA,                NA,     h660F38W1(0x92),                   VexDstDstSrc)
INST3(vgatherqpd,       "vgatherqpd",       WR, NA,                NA,     h660F38W1(0x93),                   VexDstDstSrc)
INSTA(LAST_AVX2_GATHER_INSTRUCTION, vgatherqpd)

INSTA(FIRST_FMA_INSTRUCTION, vfmadd132pd)                                                                         
INST3(vfmadd132pd,      "vfmadd132pd",      WR, NA,                NA,     h660F38W1(0x98),                   VexDstDstSrc)
INST3(vfmadd213pd,      "vfmadd213pd",      WR, NA,                NA,     h660F38W1(0xA8),                   VexDstDstSrc)
INST3(vfmadd231pd,      "vfmadd231pd",      WR, NA,                NA,     h660F38W1(0xB8),                   VexDstDstSrc)
INST3(vfmadd132ps,      "vfmadd132ps",      WR, NA,                NA,     h660F38(0x98),                     VexDstDstSrc)
INST3(vfmadd213ps,      "vfmadd213ps",      WR, NA,                NA,     h660F38(0xA8),                     VexDstDstSrc)
INST3(vfmadd231ps,      "vfmadd231ps",      WR, NA,                NA,     h660F38(0xB8),                     VexDstDstSrc)
INST3(vfmadd132sd,      "vfmadd132sd",      WR, NA,                NA,     h660F38W1(0x99),                   VexDstDstSrc)
INST3(vfmadd213sd,      "vfmadd213sd",      WR, NA,                NA,     h660F38W1(0xA9),                   VexDstDstSrc)
INST3(vfmadd231sd,      "vfmadd231sd",      WR, NA,                NA,     h660F38W1(0xB9),                   VexDstDstSrc)
INST3(vfmadd132ss,      "vfmadd132ss",      WR, NA,                NA,     h660F38(0x99),                     VexDstDstSrc)
INST3(vfmadd213ss,      "vfmadd213ss",      WR, NA,                NA,     h660F38(0xA9),                     VexDstDstSrc)
INST3(vfmadd231ss,      "vfmadd231ss",      WR, NA,                NA,     h660F38(0xB9),                     VexDstDstSrc)
INST3(vfmaddsub132pd,   "vfmaddsub132pd",   WR, NA,                NA,     h660F38W1(0x96),                   VexDstDstSrc)
INST3(vfmaddsub213pd,   "vfmaddsub213pd",   WR, NA,                NA,     h660F38W1(0xA6),                   VexDstDstSrc)
INST3(vfmaddsub231pd,   "vfmaddsub231pd",   WR, NA,                NA,     h660F38W1(0xB6),                   VexDstDstSrc)
INST3(vfmaddsub132ps,   "vfmaddsub132ps",   WR, NA,                NA,     h660F38(0x96),                     VexDstDstSrc)
INST3(vfmaddsub213ps,   "vfmaddsub213ps",   WR, NA,                NA,     h660F38(0xA6),                     VexDstDstSrc)
INST3(vfmaddsub231ps,   "vfmaddsub231ps",   WR, NA,                NA,     h660F38W1(0xB6),                   VexDstDstSrc)
INST3(vfmsubadd132pd,   "vfmsubadd132pd",   WR, NA,                NA,     h660F38(0x97),                     VexDstDstSrc)
INST3(vfmsubadd213pd,   "vfmsubadd213pd",   WR, NA,                NA,     h660F38W1(0xA7),                   VexDstDstSrc)
INST3(vfmsubadd231pd,   "vfmsubadd231pd",   WR, NA,                NA,     h660F38W1(0xB7),                   VexDstDstSrc)
INST3(vfmsubadd132ps,   "vfmsubadd132ps",   WR, NA,                NA,     h660F38(0x97),                     VexDstDstSrc)
INST3(vfmsubadd213ps,   "vfmsubadd213ps",   WR, NA,                NA,     h660F38(0xA7),                     VexDstDstSrc)
INST3(vfmsubadd231ps,   "vfmsubadd231ps",   WR, NA,                NA,     h660F38(0xB7),                     VexDstDstSrc)
INST3(vfmsub132pd,      "vfmsub132pd",      WR, NA,                NA,     h660F38W1(0x9A),                   VexDstDstSrc)
INST3(vfmsub213pd,      "vfmsub213pd",      WR, NA,                NA,     h660F38W1(0xAA),                   VexDstDstSrc)
INST3(vfmsub231pd,      "vfmsub231pd",      WR, NA,                NA,     h660F38W1(0xBA),                   VexDstDstSrc)
INST3(vfmsub132ps,      "vfmsub132ps",      WR, NA,                NA,     h660F38(0x9A),                     VexDstDstSrc)
INST3(vfmsub213ps,      "vfmsub213ps",      WR, NA,                NA,     h660F38(0xAA),                     VexDstDstSrc)
INST3(vfmsub231ps,      "vfmsub231ps",      WR, NA,                NA,     h660F38(0xBA),                     VexDstDstSrc)
INST3(vfmsub132sd,      "vfmsub132sd",      WR, NA,                NA,     h660F38W1(0x9B),                   VexDstDstSrc)
INST3(vfmsub213sd,      "vfmsub213sd",      WR, NA,                NA,     h660F38W1(0xAB),                   VexDstDstSrc)
INST3(vfmsub231sd,      "vfmsub231sd",      WR, NA,                NA,     h660F38W1(0xBB),                   VexDstDstSrc)
INST3(vfmsub132ss,      "vfmsub132ss",      WR, NA,                NA,     h660F38(0x9B),                     VexDstDstSrc)
INST3(vfmsub213ss,      "vfmsub213ss",      WR, NA,                NA,     h660F38(0xAB),                     VexDstDstSrc)
INST3(vfmsub231ss,      "vfmsub231ss",      WR, NA,                NA,     h660F38(0xBB),                     VexDstDstSrc)
INST3(vfnmadd132pd,     "vfnmadd132pd",     WR, NA,                NA,     h660F38W1(0x9C),                   VexDstDstSrc)
INST3(vfnmadd213pd,     "vfnmadd213pd",     WR, NA,                NA,     h660F38W1(0xAC),                   VexDstDstSrc)
INST3(vfnmadd231pd,     "vfnmadd231pd",     WR, NA,                NA,     h660F38W1(0xBC),                   VexDstDstSrc)
INST3(vfnmadd132ps,     "vfnmadd132ps",     WR, NA,                NA,     h660F38(0x9C),                     VexDstDstSrc)
INST3(vfnmadd213ps,     "vfnmadd213ps",     WR, NA,                NA,     h660F38(0xAC),                     VexDstDstSrc)
INST3(vfnmadd231ps,     "vfnmadd231ps",     WR, NA,                NA,     h660F38(0xBC),                     VexDstDstSrc)
INST3(vfnmadd132sd,     "vfnmadd132sd",     WR, NA,                NA,     h660F38W1(0x9D),                   VexDstDstSrc)
INST3(vfnmadd213sd,     "vfnmadd213sd",     WR, NA,                NA,     h660F38W1(0xAD),                   VexDstDstSrc)
INST3(vfnmadd231sd,     "vfnmadd231sd",     WR, NA,                NA,     h660F38W1(0xBD),                   VexDstDstSrc)
INST3(vfnmadd132ss,     "vfnmadd132ss",     WR, NA,                NA,     h660F38(0x9D),                     VexDstDstSrc)
INST3(vfnmadd213ss,     "vfnmadd213ss",     WR, NA,                NA,     h660F38(0xAD),                     VexDstDstSrc)
INST3(vfnmadd231ss,     "vfnmadd231ss",     WR, NA,                NA,     h660F38(0xBD),                     VexDstDstSrc)
INST3(vfnmsub132pd,     "vfnmsub132pd",     WR, NA,                NA,     h660F38W1(0x9E),                   VexDstDstSrc)
INST3(vfnmsub213pd,     "vfnmsub213pd",     WR, NA,                NA,     h660F38W1(0xAE),                   VexDstDstSrc)
INST3(vfnmsub231pd,     "vfnmsub231pd",     WR, NA,                NA,     h660F38W1(0xBE),                   VexDstDstSrc)
INST3(vfnmsub132ps,     "vfnmsub132ps",     WR, NA,                NA,     h660F38(0x9E),                     VexDstDstSrc)
INST3(vfnmsub213ps,     "vfnmsub213ps",     WR, NA,                NA,     h660F38(0xAE),                     VexDstDstSrc)
INST3(vfnmsub231ps,     "vfnmsub231ps",     WR, NA,                NA,     h660F38(0xBE),                     VexDstDstSrc)
INST3(vfnmsub132sd,     "vfnmsub132sd",     WR, NA,                NA,     h660F38W1(0x9F),                   VexDstDstSrc)
INST3(vfnmsub213sd,     "vfnmsub213sd",     WR, NA,                NA,     h660F38W1(0xAF),                   VexDstDstSrc)
INST3(vfnmsub231sd,     "vfnmsub231sd",     WR, NA,                NA,     h660F38W1(0xBF),                   VexDstDstSrc)
INST3(vfnmsub132ss,     "vfnmsub132ss",     WR, NA,                NA,     h660F38(0x9F),                     VexDstDstSrc)
INST3(vfnmsub213ss,     "vfnmsub213ss",     WR, NA,                NA,     h660F38(0xAF),                     VexDstDstSrc)
INST3(vfnmsub231ss,     "vfnmsub231ss",     WR, NA,                NA,     h660F38(0xBF),                     VexDstDstSrc)
INSTA(LAST_FMA_INSTRUCTION, vfnmsub231ss)                                                                         
                                                                                                                  
INSTA(FIRST_AVXVNNI_INSTRUCTION, vpdpbusd)                                                                        
INST3(vpdpbusd,         "vpdpbusd",         WR, NA,                NA,     h660F38(0x50),                     VexDstDstSrc)
INST3(vpdpwssd,         "vpdpwssd",         WR, NA,                NA,     h660F38(0x52),                     VexDstDstSrc)
INST3(vpdpbusds,        "vpdpbusds",        WR, NA,                NA,     h660F38(0x51),                     VexDstDstSrc)
INST3(vpdpwssds,        "vpdpwssds",        WR, NA,                NA,     h660F38(0x53),                     VexDstDstSrc)
INSTA(LAST_AVXVNNI_INSTRUCTION, vpdpwssds)                                                                        
INSTA(LAST_AVX_INSTRUCTION, vpdpwssds)

INST3(andn,             "andn",             WR, NA,                NA,     h0F38(0xF2),                       VexDstDstSrc)
INST3(blsi,             "blsi",             WR, NA,                NA,     h0F38(RME(0xF3, 3)),               VexDstDstSrc)
INST3(blsmsk,           "blsmsk",           WR, NA,                NA,     h0F38(RME(0xF3, 2)),               VexDstDstSrc)
INST3(blsr,             "blsr",             WR, NA,                NA,     h0F38(RME(0xF3, 1)),               VexDstDstSrc)
INST3(bextr,            "bextr",            WR, NA,                NA,     h0F38(0xF7),                       VexDstDstSrc)
INST3(rorx,             "rorx",             WR, NA,                NA,     hF20F3A(0xF0),                     None)
INST3(pdep,             "pdep",             WR, NA,                NA,     hF20F38(0xF5),                     VexDstDstSrc)
INST3(pext,             "pext",             WR, NA,                NA,     hF30F38(0xF5),                     VexDstDstSrc)
INST3(bzhi,             "bzhi",             WR, NA,                NA,     h0F38(0xF5),                       BzhiFlags | VexDstDstSrc)
INST3(mulx,             "mulx",             WR, NA,                NA,     hF20F38(0xF6),                     VexDstDstSrc)
INSTA(LAST_VEX_INSTRUCTION, mulx)
                                                                                                                  
INST3(crc32,            "crc32",            WR, NA,                NA,     hF20F38(0xF1),                     None)
INST3(tzcnt,            "tzcnt",            WR, NA,                NA,     hF30F(0xBC),                       ZCntFlags)
INST3(lzcnt,            "lzcnt",            WR, NA,                NA,     hF30F(0xBD),                       ZCntFlags)
INST3(popcnt,           "popcnt",           WR, NA,                NA,     hF30F(0xB8),                       PopCntFlags)
                                                                                                                  
INSTA(FIRST_SHIFT, rol)                                                                                           
INST2(rol,              "rol",              RW, RME(0xD3, 0),      NA,                                        RotateNFlags)
INST2(ror,              "ror",              RW, RME(0xD3, 1),      NA,                                        RotateNFlags)
INST2(rcl,              "rcl",              RW, RME(0xD3, 2),      NA,                                        RotateCarryNFlags)
INST2(rcr,              "rcr",              RW, RME(0xD3, 3),      NA,                                        RotateCarryNFlags)
INST2(shl,              "shl",              RW, RME(0xD3, 4),      NA,                                        ShiftNFlags)
INST2(shr,              "shr",              RW, RME(0xD3, 5),      NA,                                        ShiftNFlags)
INST2(sar,              "sar",              RW, RME(0xD3, 7),      NA,                                        ShiftNFlags)
INSTA(LAST_SHIFT_CL, sar)                                                                                         
INST2(rol_1,            "rol",              RW, RME(0xD1, 0),      NA,                                        Rotate1Flags)
INST2(ror_1,            "ror",              RW, RME(0xD1, 1),      NA,                                        Rotate1Flags)
INST2(rcl_1,            "rcl",              RW, RME(0xD1, 2),      NA,                                        RotateCarry1Flags)
INST2(rcr_1,            "rcr",              RW, RME(0xD1, 3),      NA,                                        RotateCarry1Flags)
INST2(shl_1,            "shl",              RW, RME(0xD1, 4),      NA,                                        Shift1Flags)
INST2(shr_1,            "shr",              RW, RME(0xD1, 5),      NA,                                        Shift1Flags)
INST2(sar_1,            "sar",              RW, RME(0xD1, 7),      NA,                                        Shift1Flags)
INSTA(LAST_SHIFT_1, sar_1)                                                                                        
INST2(rol_N,            "rol",              RW, NA,                RME(0xC1, 0),                              RotateNFlags)
INST2(ror_N,            "ror",              RW, NA,                RME(0xC1, 1),                              RotateNFlags)
INST2(rcl_N,            "rcl",              RW, NA,                RME(0xC1, 2),                              RotateCarryNFlags) 
INST2(rcr_N,            "rcr",              RW, NA,                RME(0xC1, 3),                              RotateCarryNFlags)
INST2(shl_N,            "shl",              RW, NA,                RME(0xC1, 4),                              ShiftNFlags)
INST2(shr_N,            "shr",              RW, NA,                RME(0xC1, 5),                              ShiftNFlags)
INST2(sar_N,            "sar",              RW, NA,                RME(0xC1, 7),                              ShiftNFlags)
INSTA(LAST_SHIFT_IMM, sar_N)                                                                                      
                                                                                                                  
INST2(ret,              "ret",              RD, 0xC3,              0xC2,                                      None)
INST2(call,             "call",             RD, RME(0xFF, 2),      0xE8,                                      None)
                                                                                                                  
INST1(inc,              "inc",              RW, RME(0xFF, 0),                                                 IncDecFlags)
INST1(dec,              "dec",              RW, RME(0xFF, 1),                                                 IncDecFlags)
                                                                                                                  
INST1(neg,              "neg",              RW, RME(0xF7, 3),                                                 AddSubFlags)
INST1(not,              "not",              RW, RME(0xF7, 2),                                                 None)
                                                                                                                  
INST1(idiv,             "idiv",             RD, RME(0xF7, 7),                                                 DivFlags)
INST1(div,              "div",              RD, RME(0xF7, 6),                                                 DivFlags)
INST1(mulEAX,           "mul",              RD, RME(0xF7, 4),                                                 ImulFlags)
INST1(imulEAX,          "imul",             RD, RME(0xF7, 5),                                                 ImulFlags)
                                                                                                                  
INST1(xadd,             "xadd",             RW, h0F(0xC1),                                                    AddSubFlags)
INST1(cmpxchg,          "cmpxchg",          RW, h0F(0xB1),                                                    AddSubFlags)
                                                                                                                  
INST1(rep_movs,         "rep movs",         RD, 0xA5F3,                                                       DirFlags)
INST1(movs,             "movs",             RD, 0xA5,                                                         DirFlags)
INST1(rep_stos,         "rep stos",         RD, 0xABF3,                                                       DirFlags)
INST1(stos,             "stos",             RD, 0xAB,                                                         DirFlags)
                                                                                                                  
INST1(int3,             "int3",             RD, 0xCC,                                                         None)
INST1(nop,              "nop",              RD, 0x90,                                                         None)
INST1(lock,             "lock",             RD, 0xF0,                                                         None)
INST1(leave,            "leave",            RD, 0xC9,                                                         None)
                                                                                                                  
INST1(cdq,              "cdq",              RD, 0x99,                                                         None)
                                                                                                                  
INST1(shld,             "shld",             RW, h0F(0xA4),                                                    ShiftNFlags)
INST1(shrd,             "shrd",             RW, h0F(0xAC),                                                    ShiftNFlags)
                                                                                                                  
INST1(vzeroupper,       "vzeroupper",       WR, 0xC577F8,                                                     None)
                                                                                                                  
// For RyuJIT/x86, we follow the x86 calling convention that requires                                             
// us to return floating point value on the x87 FP stack, so we need                                              
// these instructions regardless of whether we're using full stack fp.                                            
#ifdef TARGET_X86                                                                                                 
INST1(fld,              "fld",              WR, 0x00D9,                                                       None)
INST1(fstp,             "fstp",             WR, 0x18D9,                                                       None)
#endif                                                                                                            
                                                                                                                  
INST1(seto,             "seto",             WR, h0F(0x90),                                                    CcFlags_o)
INST1(setno,            "setno",            WR, h0F(0x91),                                                    CcFlags_no)
INST1(setb,             "setb",             WR, h0F(0x92),                                                    CcFlags_b)
INST1(setae,            "setae",            WR, h0F(0x93),                                                    CcFlags_ae)
INST1(sete,             "sete",             WR, h0F(0x94),                                                    CcFlags_e)
INST1(setne,            "setne",            WR, h0F(0x95),                                                    CcFlags_ne)
INST1(setbe,            "setbe",            WR, h0F(0x96),                                                    CcFlags_be)
INST1(seta,             "seta",             WR, h0F(0x97),                                                    CcFlags_a)
INST1(sets,             "sets",             WR, h0F(0x98),                                                    CcFlags_s)
INST1(setns,            "setns",            WR, h0F(0x99),                                                    CcFlags_ns)
INST1(setp,             "setp",             WR, h0F(0x9A),                                                    CcFlags_p)
INST1(setnp,            "setnp",            WR, h0F(0x9B),                                                    CcFlags_np)
INST1(setl,             "setl",             WR, h0F(0x9C),                                                    CcFlags_l)
INST1(setge,            "setge",            WR, h0F(0x9D),                                                    CcFlags_ge)
INST1(setle,            "setle",            WR, h0F(0x9E),                                                    CcFlags_le)
INST1(setg,             "setg",             WR, h0F(0x9F),                                                    CcFlags_g)
                                                                                                                  
#ifdef TARGET_AMD64                                                                                               
// A jump with rex prefix. This is used for register indirect tail calls.                                         
INST1(rex_jmp,          "rex.jmp",          RD, hW1(RME(0xFF, 4)),                                            None)
#endif                                                                                                            
                                                                                                                  
INST1(i_jmp,            "jmp",              RD, RME(0xFF, 4),                                                 None)
                                                                                                                  
INSTA(FIRST_JMP, jmp)                                                                                             
INST0(jmp,              "jmp",              RD, 0xEB,                                                         None)
INST0(l_jmp,            "jmp",              RD, 0xE9,                                                         None)
INSTA(FIRST_JCC, jo)                                                                                              
INST0(jo,               "jo",               RD, 0x70,                                                         CcFlags_o)
INST0(jno,              "jno",              RD, 0x71,                                                         CcFlags_no)
INST0(jb,               "jb",               RD, 0x72,                                                         CcFlags_b)
INST0(jae,              "jae",              RD, 0x73,                                                         CcFlags_ae)
INST0(je,               "je",               RD, 0x74,                                                         CcFlags_e)
INST0(jne,              "jne",              RD, 0x75,                                                         CcFlags_ne)
INST0(jbe,              "jbe",              RD, 0x76,                                                         CcFlags_be)
INST0(ja,               "ja",               RD, 0x77,                                                         CcFlags_a)
INST0(js,               "js",               RD, 0x78,                                                         CcFlags_s)
INST0(jns,              "jns",              RD, 0x79,                                                         CcFlags_ns)
INST0(jp,               "jp",               RD, 0x7A,                                                         CcFlags_p)
INST0(jnp,              "jnp",              RD, 0x7B,                                                         CcFlags_np)
INST0(jl,               "jl",               RD, 0x7C,                                                         CcFlags_l)
INST0(jge,              "jge",              RD, 0x7D,                                                         CcFlags_ge)
INST0(jle,              "jle",              RD, 0x7E,                                                         CcFlags_le)
INST0(jg,               "jg",               RD, 0x7F,                                                         CcFlags_g)
INSTA(LAST_JCC, jg)                                                                                               
INSTA(LAST_JMP, jg)                                                                                               
                                                                                                                  
INST0(align,            "align",            RD, NA,                                                           None)
// clang-format on

#undef INST0
#undef INST1
#undef INST2
#undef INST3
#undef INST4
#undef INST5
#undef INSTA

#pragma pop_macro("NA")
#pragma pop_macro("RD")
#pragma pop_macro("WR")
#pragma pop_macro("RW")

#endif // TARGET_XARCH
